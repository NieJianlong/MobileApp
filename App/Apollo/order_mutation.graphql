fragment OrderResponseFields on OrderResponse {
  orderId
  buyerId
  orderNumber
  subTotal
  discount
  serviceFees
  shippingFees
  taxes
  totalSavings
  orderTotal
  orderItems {
    orderItemId
    listingId
    variantId
    sellerId
    quantity
    itemPrice
  }
  paymentDetails {
    balanceToPay
    usedGiftAmount
    usedWalletAmount
  }
}
mutation CancelOrderItem($request: CancelOrderItemRequest) {
  cancelOrderItem(request: $request)
}
mutation MarkOrderItemAsDelivered($request: OrderItemDeliveredRequest!) {
  markOrderItemAsDelivered(request: $request)
}

mutation SubmitOrderReturnRequest($request: OrderReturnRequest!) {
  submitOrderReturnRequest(request: $request) {
    orderReturnId
    deadline
    latestEventStatus
    deliveryOption
    returnLabel
    returnAddress {
      addressId
      streetAddress1
      streetAddress2
      townCity
      country
      provinceState
      areaCode
    }
    collectionPoint {
      collectionPointId
      microHubId
      streetAddress1
      streetAddress2
      townCity
      country
      provinceState
      areaCode
      openingHours
      contactNumber
      contactPerson
      # address{
      #     id
      #     flat
      #     floor
      #     block
      #     building
      #     houseNumber
      #     streetAddress1
      #     streetAddress2
      #     townCity
      #     villageArea
      #     district
      #     provinceState
      #     country
      #     areaCode
      #     landMark
      #     pinCode
      #     addressType
      #     referenceId
      #     defaultAddress
      # }
    }
    sellerLocation {
      collectionPointId
      streetAddress1
      streetAddress2
      townCity
      country
      provinceState
      areaCode
      contactNumber
      contactPerson
      collectionDate
    }
    qrCodeAsBase64
  }
}

mutation CreateOrderFromCart($cart: CartInput!) {
  createOrderFromCart(request: $cart) {
    ...OrderResponseFields
  }
}

mutation RazorpayCreateOrder($request: RazorpayOrderRequest!) {
  razorpayCreateOrder(request: $request) {
    razorpayOrderId
    razorpayOrderStatus
  }
}

mutation RazorpayVerifyPaymentSignature(
  $request: RazorpayVerifyPaymentSignatureRequest!
) {
  razorpayVerifyPaymentSignature(request: $request) {
    valid
    razorpayPaymentId
    razorpayOrderId
    razorpayPaymentStatus
    razorpayOrderId
    razorpayOrderStatus
  }
}

query GetBuyerSalamiWalletBalance {
  getBuyerSalamiWalletBalance {
    walletId
    buyerId
    walletBalance
    giftBalance
  }
}
