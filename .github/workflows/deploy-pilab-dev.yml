# PR to dev/main, run tests and create review
name: Deploy Pilab Dev
on:
  push:
    branches:
      - development
      - sellerScan

jobs:
  ci-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Gen Token
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
  review:
    needs: [ci-test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: 🏗 Setup Expo and EAS
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install
        run: yarn install

      - name: Gen Graphql
        run: yarn gen:gql

      - name: Expo updates
        run: expo publish --release-channel production

      # - name: Expo Publish
      #   run: |
      #     eas build -p android --non-interactive --json > buildLogAndroid.json
      #     sed -i 's/\[//g' buildLogAndroid.json
      #     sed -i 's/\]//g' buildLogAndroid.json
      #     cat buildLogAndroid.json

      - name: Parse latest Version
        id: getLatestVersion
        run: |
          result=$(sed -n 1p ./App/updates.ts  | sed "s/\([^0-9]*\)\([0-9]*\)/\2/" | sed "s/;//g")
          echo "::set-output name=releaseChannel::$result"

      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_LINK_NAMES: true
          SLACK_ICON: https://raw.githubusercontent.com/zhuchuanwu/publicImage/main/100.png
          SLACK_FOOTER: the latest version for android 1.0.1 ${{ steps.androidUrl.outputs.releaseChannel }}

          SLACK_TITLE: Salami Slicing Updated
          SLACK_USERNAME: Salami Slicing

      # - name: Echo Parse Asset URL
      #   run: echo ${{ steps.androidUrl.outputs.releaseChannel }}
