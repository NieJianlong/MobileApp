diff --git a/node_modules/react-native-share/lib/commonjs/index.js b/node_modules/react-native-share/lib/commonjs/index.js
index c098a33..00a4dcb 100644
--- a/node_modules/react-native-share/lib/commonjs/index.js
+++ b/node_modules/react-native-share/lib/commonjs/index.js
@@ -1,43 +1,43 @@
 "use strict";
 
 Object.defineProperty(exports, "__esModule", {
-  value: true
+  value: true,
 });
 Object.defineProperty(exports, "Overlay", {
   enumerable: true,
   get: function () {
     return _Overlay.default;
-  }
+  },
 });
 Object.defineProperty(exports, "Sheet", {
   enumerable: true,
   get: function () {
     return _Sheet.default;
-  }
+  },
 });
 Object.defineProperty(exports, "Button", {
   enumerable: true,
   get: function () {
     return _Button.default;
-  }
+  },
 });
 Object.defineProperty(exports, "ShareSheet", {
   enumerable: true,
   get: function () {
     return _ShareSheet.default;
-  }
+  },
 });
 Object.defineProperty(exports, "Social", {
   enumerable: true,
   get: function () {
     return _types.Social;
-  }
+  },
 });
 Object.defineProperty(exports, "ShareAsset", {
   enumerable: true,
   get: function () {
     return _types.ShareAsset;
-  }
+  },
 });
 exports.default = void 0;
 
@@ -51,11 +51,15 @@ var _Button = _interopRequireDefault(require("./components/Button"));
 
 var _ShareSheet = _interopRequireDefault(require("./components/ShareSheet"));
 
-var _requireAndAskPermissions = _interopRequireDefault(require("./helpers/requireAndAskPermissions"));
+var _requireAndAskPermissions = _interopRequireDefault(
+  require("./helpers/requireAndAskPermissions")
+);
 
 var _types = require("./types");
 
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
+function _interopRequireDefault(obj) {
+  return obj && obj.__esModule ? obj : { default: obj };
+}
 
 const RNShare = {
   Button: _Button.default,
@@ -63,103 +67,143 @@ const RNShare = {
   Overlay: _Overlay.default,
   Sheet: _Sheet.default,
   Social: {
-    FACEBOOK: _reactNative.NativeModules.RNShare.FACEBOOK || _types.Social.Facebook,
-    FACEBOOK_STORIES: _reactNative.NativeModules.RNShare.FACEBOOKSTORIES || _types.Social.FacebookStories,
-    PAGESMANAGER: _reactNative.NativeModules.RNShare.PAGESMANAGER || _types.Social.Pagesmanager,
-    TWITTER: _reactNative.NativeModules.RNShare.TWITTER || _types.Social.Twitter,
-    WHATSAPP: _reactNative.NativeModules.RNShare.WHATSAPP || _types.Social.Whatsapp,
-    WHATSAPPBUSINESS: _reactNative.NativeModules.RNShare.WHATSAPPBUSINESS || _types.Social.Whatsappbusiness,
-    INSTAGRAM: _reactNative.NativeModules.RNShare.INSTAGRAM || _types.Social.Instagram,
-    INSTAGRAM_STORIES: _reactNative.NativeModules.RNShare.INSTAGRAMSTORIES || _types.Social.InstagramStories,
-    GOOGLEPLUS: _reactNative.NativeModules.RNShare.GOOGLEPLUS || _types.Social.Googleplus,
+    FACEBOOK:
+      _reactNative.NativeModules.RNShare.FACEBOOK || _types.Social.Facebook,
+    FACEBOOK_STORIES:
+      _reactNative.NativeModules.RNShare.FACEBOOKSTORIES ||
+      _types.Social.FacebookStories,
+    PAGESMANAGER:
+      _reactNative.NativeModules.RNShare.PAGESMANAGER ||
+      _types.Social.Pagesmanager,
+    TWITTER:
+      _reactNative.NativeModules.RNShare.TWITTER || _types.Social.Twitter,
+    WHATSAPP:
+      _reactNative.NativeModules.RNShare.WHATSAPP || _types.Social.Whatsapp,
+    WHATSAPPBUSINESS:
+      _reactNative.NativeModules.RNShare.WHATSAPPBUSINESS ||
+      _types.Social.Whatsappbusiness,
+    INSTAGRAM:
+      _reactNative.NativeModules.RNShare.INSTAGRAM || _types.Social.Instagram,
+    INSTAGRAM_STORIES:
+      _reactNative.NativeModules.RNShare.INSTAGRAMSTORIES ||
+      _types.Social.InstagramStories,
+    GOOGLEPLUS:
+      _reactNative.NativeModules.RNShare.GOOGLEPLUS || _types.Social.Googleplus,
     EMAIL: _reactNative.NativeModules.RNShare.EMAIL || _types.Social.Email,
-    PINTEREST: _reactNative.NativeModules.RNShare.PINTEREST || _types.Social.Pinterest,
-    LINKEDIN: _reactNative.NativeModules.RNShare.LINKEDIN || _types.Social.Linkedin,
+    PINTEREST:
+      _reactNative.NativeModules.RNShare.PINTEREST || _types.Social.Pinterest,
+    LINKEDIN:
+      _reactNative.NativeModules.RNShare.LINKEDIN || _types.Social.Linkedin,
     SMS: _reactNative.NativeModules.RNShare.SMS || _types.Social.Sms,
-    TELEGRAM: _reactNative.NativeModules.RNShare.TELEGRAM || _types.Social.Telegram,
-    MESSENGER: _reactNative.NativeModules.RNShare.MESSENGER || _types.Social.Messenger,
-    SNAPCHAT: _reactNative.NativeModules.RNShare.SNAPCHAT || _types.Social.Snapchat
+    TELEGRAM:
+      _reactNative.NativeModules.RNShare.TELEGRAM || _types.Social.Telegram,
+    MESSENGER:
+      _reactNative.NativeModules.RNShare.MESSENGER || _types.Social.Messenger,
+    SNAPCHAT:
+      _reactNative.NativeModules.RNShare.SNAPCHAT || _types.Social.Snapchat,
   },
 
   open(options) {
     return new Promise((resolve, reject) => {
-      (0, _requireAndAskPermissions.default)(options).then(() => {
-        if (_reactNative.Platform.OS === 'ios' && options.url && !options.urls) {
-          // Backward compatibility with { Share } from react-native
-          const url = options.url;
-          delete options.url;
-          options.urls = [url];
-
-          if (options.filename && !options.filenames) {
-            options.filenames = [options.filename];
-            delete options.filename;
+      (0, _requireAndAskPermissions.default)(options)
+        .then(() => {
+          if (
+            _reactNative.Platform.OS === "ios" &&
+            options.url &&
+            !options.urls
+          ) {
+            // Backward compatibility with { Share } from react-native
+            const url = options.url;
+            delete options.url;
+            options.urls = [url];
+
+            if (options.filename && !options.filenames) {
+              options.filenames = [options.filename];
+              delete options.filename;
+            }
           }
-        }
 
-        _reactNative.NativeModules.RNShare.open(options, error => {
-          return reject({
-            error
-          });
-        }, (success, message) => {
-          if (success) {
-            return resolve({
-              success,
-              message
-            });
-          } else if (options.failOnCancel === false) {
-            return resolve({
-              dismissedAction: true,
-              success,
-              message
-            });
-          } else {
-            reject(new Error('User did not share'));
-          }
-        });
-      }).catch(e => reject(e));
+          _reactNative.NativeModules.RNShare.open(
+            options,
+            (error) => {
+              return reject({
+                error,
+              });
+            },
+            (success, message) => {
+              if (success) {
+                return resolve({
+                  success,
+                  message,
+                });
+              } else if (options.failOnCancel === false) {
+                return resolve({
+                  dismissedAction: true,
+                  success,
+                  message,
+                });
+              } else {
+                // reject(new Error('User did not share'));
+              }
+            }
+          );
+        })
+        .catch((e) => reject(e));
     });
   },
 
   shareSingle(options) {
-    if (_reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'android') {
+    if (
+      _reactNative.Platform.OS === "ios" ||
+      _reactNative.Platform.OS === "android"
+    ) {
       return new Promise((resolve, reject) => {
-        (0, _requireAndAskPermissions.default)(options).then(() => {
-          _reactNative.NativeModules.RNShare.shareSingle(options, error => {
-            return reject({
-              error
-            });
-          }, (success, message) => {
-            return resolve({
-              success,
-              message
-            });
-          });
-        }).catch(e => reject(e));
+        (0, _requireAndAskPermissions.default)(options)
+          .then(() => {
+            _reactNative.NativeModules.RNShare.shareSingle(
+              options,
+              (error) => {
+                return reject({
+                  error,
+                });
+              },
+              (success, message) => {
+                return resolve({
+                  success,
+                  message,
+                });
+              }
+            );
+          })
+          .catch((e) => reject(e));
       });
     } else {
-      throw new Error('Not implemented');
+      throw new Error("Not implemented");
     }
   },
 
   isPackageInstalled(packageName) {
-    if (_reactNative.Platform.OS === 'android') {
+    if (_reactNative.Platform.OS === "android") {
       return new Promise((resolve, reject) => {
-        _reactNative.NativeModules.RNShare.isPackageInstalled(packageName, error => {
-          return reject({
-            error
-          });
-        }, isInstalled => {
-          return resolve({
-            isInstalled,
-            message: 'Package is Installed'
-          });
-        });
+        _reactNative.NativeModules.RNShare.isPackageInstalled(
+          packageName,
+          (error) => {
+            return reject({
+              error,
+            });
+          },
+          (isInstalled) => {
+            return resolve({
+              isInstalled,
+              message: "Package is Installed",
+            });
+          }
+        );
       });
     } else {
-      throw new Error('Not implemented');
+      throw new Error("Not implemented");
     }
-  }
-
+  },
 };
 var _default = RNShare;
 exports.default = _default;
diff --git a/node_modules/react-native-share/lib/commonjs/index.js.map b/node_modules/react-native-share/lib/commonjs/index.js.map
index 2ca876f..b547e08 100644
--- a/node_modules/react-native-share/lib/commonjs/index.js.map
+++ b/node_modules/react-native-share/lib/commonjs/index.js.map
@@ -1 +1,77 @@
-{"version":3,"sources":["index.tsx"],"names":["RNShare","Button","ShareSheet","Overlay","Sheet","Social","FACEBOOK","NativeModules","Facebook","FACEBOOK_STORIES","FACEBOOKSTORIES","FacebookStories","PAGESMANAGER","Pagesmanager","TWITTER","Twitter","WHATSAPP","Whatsapp","WHATSAPPBUSINESS","Whatsappbusiness","INSTAGRAM","Instagram","INSTAGRAM_STORIES","INSTAGRAMSTORIES","InstagramStories","GOOGLEPLUS","Googleplus","EMAIL","Email","PINTEREST","Pinterest","LINKEDIN","Linkedin","SMS","Sms","TELEGRAM","Telegram","MESSENGER","Messenger","SNAPCHAT","Snapchat","open","options","Promise","resolve","reject","then","Platform","OS","url","urls","filename","filenames","error","success","message","failOnCancel","dismissedAction","Error","catch","e","shareSingle","isPackageInstalled","packageName","isInstalled"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAWA,MAAMA,OAAO,GAAG;AACdC,EAAAA,MAAM,EAANA,eADc;AAEdC,EAAAA,UAAU,EAAVA,mBAFc;AAGdC,EAAAA,OAAO,EAAPA,gBAHc;AAIdC,EAAAA,KAAK,EAALA,cAJc;AAMdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAEC,2BAAcP,OAAd,CAAsBM,QAAtB,IAAkCD,cAAOG,QAD7C;AAENC,IAAAA,gBAAgB,EAAEF,2BAAcP,OAAd,CAAsBU,eAAtB,IAAyCL,cAAOM,eAF5D;AAGNC,IAAAA,YAAY,EAAEL,2BAAcP,OAAd,CAAsBY,YAAtB,IAAsCP,cAAOQ,YAHrD;AAINC,IAAAA,OAAO,EAAEP,2BAAcP,OAAd,CAAsBc,OAAtB,IAAiCT,cAAOU,OAJ3C;AAKNC,IAAAA,QAAQ,EAAET,2BAAcP,OAAd,CAAsBgB,QAAtB,IAAkCX,cAAOY,QAL7C;AAMNC,IAAAA,gBAAgB,EAAEX,2BAAcP,OAAd,CAAsBkB,gBAAtB,IAA0Cb,cAAOc,gBAN7D;AAONC,IAAAA,SAAS,EAAEb,2BAAcP,OAAd,CAAsBoB,SAAtB,IAAmCf,cAAOgB,SAP/C;AAQNC,IAAAA,iBAAiB,EAAEf,2BAAcP,OAAd,CAAsBuB,gBAAtB,IAA0ClB,cAAOmB,gBAR9D;AASNC,IAAAA,UAAU,EAAElB,2BAAcP,OAAd,CAAsByB,UAAtB,IAAoCpB,cAAOqB,UATjD;AAUNC,IAAAA,KAAK,EAAEpB,2BAAcP,OAAd,CAAsB2B,KAAtB,IAA+BtB,cAAOuB,KAVvC;AAWNC,IAAAA,SAAS,EAAEtB,2BAAcP,OAAd,CAAsB6B,SAAtB,IAAmCxB,cAAOyB,SAX/C;AAYNC,IAAAA,QAAQ,EAAExB,2BAAcP,OAAd,CAAsB+B,QAAtB,IAAkC1B,cAAO2B,QAZ7C;AAaNC,IAAAA,GAAG,EAAE1B,2BAAcP,OAAd,CAAsBiC,GAAtB,IAA6B5B,cAAO6B,GAbnC;AAcNC,IAAAA,QAAQ,EAAE5B,2BAAcP,OAAd,CAAsBmC,QAAtB,IAAkC9B,cAAO+B,QAd7C;AAeNC,IAAAA,SAAS,EAAE9B,2BAAcP,OAAd,CAAsBqC,SAAtB,IAAmChC,cAAOiC,SAf/C;AAgBNC,IAAAA,QAAQ,EAAEhC,2BAAcP,OAAd,CAAsBuC,QAAtB,IAAkClC,cAAOmC;AAhB7C,GANM;;AAyBdC,EAAAA,IAAI,CAACC,OAAD,EAA0D;AAC5D,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,6CAAyBH,OAAzB,EACGI,IADH,CACQ,MAAM;AACV,YAAIC,sBAASC,EAAT,KAAgB,KAAhB,IAAyBN,OAAO,CAACO,GAAjC,IAAwC,CAACP,OAAO,CAACQ,IAArD,EAA2D;AACzD;AACA,gBAAMD,GAAG,GAAGP,OAAO,CAACO,GAApB;AACA,iBAAOP,OAAO,CAACO,GAAf;AAEAP,UAAAA,OAAO,CAACQ,IAAR,GAAe,CAACD,GAAD,CAAf;;AAEA,cAAIP,OAAO,CAACS,QAAR,IAAoB,CAACT,OAAO,CAACU,SAAjC,EAA4C;AAC1CV,YAAAA,OAAO,CAACU,SAAR,GAAoB,CAACV,OAAO,CAACS,QAAT,CAApB;AACA,mBAAOT,OAAO,CAACS,QAAf;AACD;AACF;;AAED5C,mCAAcP,OAAd,CAAsByC,IAAtB,CACEC,OADF,EAEGW,KAAD,IAAW;AACT,iBAAOR,MAAM,CAAC;AAAEQ,YAAAA;AAAF,WAAD,CAAb;AACD,SAJH,EAKE,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACpB,cAAID,OAAJ,EAAa;AACX,mBAAOV,OAAO,CAAC;AACbU,cAAAA,OADa;AAEbC,cAAAA;AAFa,aAAD,CAAd;AAID,WALD,MAKO,IAAIb,OAAO,CAACc,YAAR,KAAyB,KAA7B,EAAoC;AACzC,mBAAOZ,OAAO,CAAC;AACba,cAAAA,eAAe,EAAE,IADJ;AAEbH,cAAAA,OAFa;AAGbC,cAAAA;AAHa,aAAD,CAAd;AAKD,WANM,MAMA;AACLV,YAAAA,MAAM,CAAC,IAAIa,KAAJ,CAAU,oBAAV,CAAD,CAAN;AACD;AACF,SApBH;AAsBD,OArCH,EAsCGC,KAtCH,CAsCUC,CAAD,IAAgBf,MAAM,CAACe,CAAD,CAtC/B;AAuCD,KAxCM,CAAP;AAyCD,GAnEa;;AAqEdC,EAAAA,WAAW,CAACnB,OAAD,EAAkE;AAC3E,QAAIK,sBAASC,EAAT,KAAgB,KAAhB,IAAyBD,sBAASC,EAAT,KAAgB,SAA7C,EAAwD;AACtD,aAAO,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,+CAAyBH,OAAzB,EACGI,IADH,CACQ,MAAM;AACVvC,qCAAcP,OAAd,CAAsB6D,WAAtB,CACEnB,OADF,EAEGW,KAAD,IAAW;AACT,mBAAOR,MAAM,CAAC;AAAEQ,cAAAA;AAAF,aAAD,CAAb;AACD,WAJH,EAKE,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACpB,mBAAOX,OAAO,CAAC;AACbU,cAAAA,OADa;AAEbC,cAAAA;AAFa,aAAD,CAAd;AAID,WAVH;AAYD,SAdH,EAeGI,KAfH,CAeUC,CAAD,IAAgBf,MAAM,CAACe,CAAD,CAf/B;AAgBD,OAjBM,CAAP;AAkBD,KAnBD,MAmBO;AACL,YAAM,IAAIF,KAAJ,CAAU,iBAAV,CAAN;AACD;AACF,GA5Fa;;AA8FdI,EAAAA,kBAAkB,CAACC,WAAD,EAAiE;AACjF,QAAIhB,sBAASC,EAAT,KAAgB,SAApB,EAA+B;AAC7B,aAAO,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCtC,mCAAcP,OAAd,CAAsB8D,kBAAtB,CACEC,WADF,EAEGV,KAAD,IAAW;AACT,iBAAOR,MAAM,CAAC;AAAEQ,YAAAA;AAAF,WAAD,CAAb;AACD,SAJH,EAKGW,WAAD,IAAiB;AACf,iBAAOpB,OAAO,CAAC;AACboB,YAAAA,WADa;AAEbT,YAAAA,OAAO,EAAE;AAFI,WAAD,CAAd;AAID,SAVH;AAYD,OAbM,CAAP;AAcD,KAfD,MAeO;AACL,YAAM,IAAIG,KAAJ,CAAU,iBAAV,CAAN;AACD;AACF;;AAjHa,CAAhB;eA0He1D,O","sourcesContent":["import { NativeModules, Platform } from 'react-native';\n\nimport Overlay from './components/Overlay';\nimport Sheet from './components/Sheet';\nimport Button from './components/Button';\nimport ShareSheet from './components/ShareSheet';\nimport requireAndAskPermissions from './helpers/requireAndAskPermissions';\nimport {\n  Social,\n  IsPackageInstalledResult,\n  ActivityType,\n  ShareOpenResult,\n  ShareAsset,\n  ShareOptions,\n  ShareSingleOptions,\n  ShareSingleResult,\n} from './types';\n\nconst RNShare = {\n  Button,\n  ShareSheet,\n  Overlay,\n  Sheet,\n\n  Social: {\n    FACEBOOK: NativeModules.RNShare.FACEBOOK || Social.Facebook,\n    FACEBOOK_STORIES: NativeModules.RNShare.FACEBOOKSTORIES || Social.FacebookStories,\n    PAGESMANAGER: NativeModules.RNShare.PAGESMANAGER || Social.Pagesmanager,\n    TWITTER: NativeModules.RNShare.TWITTER || Social.Twitter,\n    WHATSAPP: NativeModules.RNShare.WHATSAPP || Social.Whatsapp,\n    WHATSAPPBUSINESS: NativeModules.RNShare.WHATSAPPBUSINESS || Social.Whatsappbusiness,\n    INSTAGRAM: NativeModules.RNShare.INSTAGRAM || Social.Instagram,\n    INSTAGRAM_STORIES: NativeModules.RNShare.INSTAGRAMSTORIES || Social.InstagramStories,\n    GOOGLEPLUS: NativeModules.RNShare.GOOGLEPLUS || Social.Googleplus,\n    EMAIL: NativeModules.RNShare.EMAIL || Social.Email,\n    PINTEREST: NativeModules.RNShare.PINTEREST || Social.Pinterest,\n    LINKEDIN: NativeModules.RNShare.LINKEDIN || Social.Linkedin,\n    SMS: NativeModules.RNShare.SMS || Social.Sms,\n    TELEGRAM: NativeModules.RNShare.TELEGRAM || Social.Telegram,\n    MESSENGER: NativeModules.RNShare.MESSENGER || Social.Messenger,\n    SNAPCHAT: NativeModules.RNShare.SNAPCHAT || Social.Snapchat,\n  },\n\n  open(options: ShareOptions): Promise<ShareOpenResult | never> {\n    return new Promise((resolve, reject) => {\n      requireAndAskPermissions(options)\n        .then(() => {\n          if (Platform.OS === 'ios' && options.url && !options.urls) {\n            // Backward compatibility with { Share } from react-native\n            const url = options.url;\n            delete options.url;\n\n            options.urls = [url];\n\n            if (options.filename && !options.filenames) {\n              options.filenames = [options.filename];\n              delete options.filename;\n            }\n          }\n\n          NativeModules.RNShare.open(\n            options,\n            (error) => {\n              return reject({ error });\n            },\n            (success, message) => {\n              if (success) {\n                return resolve({\n                  success,\n                  message,\n                });\n              } else if (options.failOnCancel === false) {\n                return resolve({\n                  dismissedAction: true,\n                  success,\n                  message,\n                });\n              } else {\n                reject(new Error('User did not share'));\n              }\n            },\n          );\n        })\n        .catch((e: unknown) => reject(e));\n    });\n  },\n\n  shareSingle(options: ShareSingleOptions): Promise<ShareSingleResult | never> {\n    if (Platform.OS === 'ios' || Platform.OS === 'android') {\n      return new Promise((resolve, reject) => {\n        requireAndAskPermissions(options)\n          .then(() => {\n            NativeModules.RNShare.shareSingle(\n              options,\n              (error) => {\n                return reject({ error });\n              },\n              (success, message) => {\n                return resolve({\n                  success,\n                  message,\n                });\n              },\n            );\n          })\n          .catch((e: unknown) => reject(e));\n      });\n    } else {\n      throw new Error('Not implemented');\n    }\n  },\n\n  isPackageInstalled(packageName: string): Promise<IsPackageInstalledResult | never> {\n    if (Platform.OS === 'android') {\n      return new Promise((resolve, reject) => {\n        NativeModules.RNShare.isPackageInstalled(\n          packageName,\n          (error) => {\n            return reject({ error });\n          },\n          (isInstalled) => {\n            return resolve({\n              isInstalled,\n              message: 'Package is Installed',\n            });\n          },\n        );\n      });\n    } else {\n      throw new Error('Not implemented');\n    }\n  },\n} as const;\n\nexport { Overlay, Sheet, Button, ShareSheet, ShareAsset, Social };\nexport type { ShareSingleOptions, ShareOptions, ActivityType, IsPackageInstalledResult };\nexport type { OverlayProps } from './components/Overlay';\nexport type { SheetProps } from './components/Sheet';\nexport type { ButtonProps } from './components/Button';\nexport type { ShareSheetProps } from './components/ShareSheet';\nexport default RNShare;\n"]}
\ No newline at end of file
+{
+  "version": 3,
+  "sources": [
+    "index.tsx"
+  ],
+  "names": [
+    "RNShare",
+    "Button",
+    "ShareSheet",
+    "Overlay",
+    "Sheet",
+    "Social",
+    "FACEBOOK",
+    "NativeModules",
+    "Facebook",
+    "FACEBOOK_STORIES",
+    "FACEBOOKSTORIES",
+    "FacebookStories",
+    "PAGESMANAGER",
+    "Pagesmanager",
+    "TWITTER",
+    "Twitter",
+    "WHATSAPP",
+    "Whatsapp",
+    "WHATSAPPBUSINESS",
+    "Whatsappbusiness",
+    "INSTAGRAM",
+    "Instagram",
+    "INSTAGRAM_STORIES",
+    "INSTAGRAMSTORIES",
+    "InstagramStories",
+    "GOOGLEPLUS",
+    "Googleplus",
+    "EMAIL",
+    "Email",
+    "PINTEREST",
+    "Pinterest",
+    "LINKEDIN",
+    "Linkedin",
+    "SMS",
+    "Sms",
+    "TELEGRAM",
+    "Telegram",
+    "MESSENGER",
+    "Messenger",
+    "SNAPCHAT",
+    "Snapchat",
+    "open",
+    "options",
+    "Promise",
+    "resolve",
+    "reject",
+    "then",
+    "Platform",
+    "OS",
+    "url",
+    "urls",
+    "filename",
+    "filenames",
+    "error",
+    "success",
+    "message",
+    "failOnCancel",
+    "dismissedAction",
+    "Error",
+    "catch",
+    "e",
+    "shareSingle",
+    "isPackageInstalled",
+    "packageName",
+    "isInstalled"
+  ],
+  "mappings": "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",
+  "sourcesContent": [
+    "import { NativeModules, Platform } from 'react-native';\n\nimport Overlay from './components/Overlay';\nimport Sheet from './components/Sheet';\nimport Button from './components/Button';\nimport ShareSheet from './components/ShareSheet';\nimport requireAndAskPermissions from './helpers/requireAndAskPermissions';\nimport {\n  Social,\n  IsPackageInstalledResult,\n  ActivityType,\n  ShareOpenResult,\n  ShareAsset,\n  ShareOptions,\n  ShareSingleOptions,\n  ShareSingleResult,\n} from './types';\n\nconst RNShare = {\n  Button,\n  ShareSheet,\n  Overlay,\n  Sheet,\n\n  Social: {\n    FACEBOOK: NativeModules.RNShare.FACEBOOK || Social.Facebook,\n    FACEBOOK_STORIES: NativeModules.RNShare.FACEBOOKSTORIES || Social.FacebookStories,\n    PAGESMANAGER: NativeModules.RNShare.PAGESMANAGER || Social.Pagesmanager,\n    TWITTER: NativeModules.RNShare.TWITTER || Social.Twitter,\n    WHATSAPP: NativeModules.RNShare.WHATSAPP || Social.Whatsapp,\n    WHATSAPPBUSINESS: NativeModules.RNShare.WHATSAPPBUSINESS || Social.Whatsappbusiness,\n    INSTAGRAM: NativeModules.RNShare.INSTAGRAM || Social.Instagram,\n    INSTAGRAM_STORIES: NativeModules.RNShare.INSTAGRAMSTORIES || Social.InstagramStories,\n    GOOGLEPLUS: NativeModules.RNShare.GOOGLEPLUS || Social.Googleplus,\n    EMAIL: NativeModules.RNShare.EMAIL || Social.Email,\n    PINTEREST: NativeModules.RNShare.PINTEREST || Social.Pinterest,\n    LINKEDIN: NativeModules.RNShare.LINKEDIN || Social.Linkedin,\n    SMS: NativeModules.RNShare.SMS || Social.Sms,\n    TELEGRAM: NativeModules.RNShare.TELEGRAM || Social.Telegram,\n    MESSENGER: NativeModules.RNShare.MESSENGER || Social.Messenger,\n    SNAPCHAT: NativeModules.RNShare.SNAPCHAT || Social.Snapchat,\n  },\n\n  open(options: ShareOptions): Promise<ShareOpenResult | never> {\n    return new Promise((resolve, reject) => {\n      requireAndAskPermissions(options)\n        .then(() => {\n          if (Platform.OS === 'ios' && options.url && !options.urls) {\n            // Backward compatibility with { Share } from react-native\n            const url = options.url;\n            delete options.url;\n\n            options.urls = [url];\n\n            if (options.filename && !options.filenames) {\n              options.filenames = [options.filename];\n              delete options.filename;\n            }\n          }\n\n          NativeModules.RNShare.open(\n            options,\n            (error) => {\n              return reject({ error });\n            },\n            (success, message) => {\n              if (success) {\n                return resolve({\n                  success,\n                  message,\n                });\n              } else if (options.failOnCancel === false) {\n                return resolve({\n                  dismissedAction: true,\n                  success,\n                  message,\n                });\n              } else {\n               \n              }\n            },\n          );\n        })\n        .catch((e: unknown) => reject(e));\n    });\n  },\n\n  shareSingle(options: ShareSingleOptions): Promise<ShareSingleResult | never> {\n    if (Platform.OS === 'ios' || Platform.OS === 'android') {\n      return new Promise((resolve, reject) => {\n        requireAndAskPermissions(options)\n          .then(() => {\n            NativeModules.RNShare.shareSingle(\n              options,\n              (error) => {\n                return reject({ error });\n              },\n              (success, message) => {\n                return resolve({\n                  success,\n                  message,\n                });\n              },\n            );\n          })\n          .catch((e: unknown) => reject(e));\n      });\n    } else {\n      throw new Error('Not implemented');\n    }\n  },\n\n  isPackageInstalled(packageName: string): Promise<IsPackageInstalledResult | never> {\n    if (Platform.OS === 'android') {\n      return new Promise((resolve, reject) => {\n        NativeModules.RNShare.isPackageInstalled(\n          packageName,\n          (error) => {\n            return reject({ error });\n          },\n          (isInstalled) => {\n            return resolve({\n              isInstalled,\n              message: 'Package is Installed',\n            });\n          },\n        );\n      });\n    } else {\n      throw new Error('Not implemented');\n    }\n  },\n} as const;\n\nexport { Overlay, Sheet, Button, ShareSheet, ShareAsset, Social };\nexport type { ShareSingleOptions, ShareOptions, ActivityType, IsPackageInstalledResult };\nexport type { OverlayProps } from './components/Overlay';\nexport type { SheetProps } from './components/Sheet';\nexport type { ButtonProps } from './components/Button';\nexport type { ShareSheetProps } from './components/ShareSheet';\nexport default RNShare;\n"
+  ]
+}
diff --git a/node_modules/react-native-share/lib/module/index.js b/node_modules/react-native-share/lib/module/index.js
index fb6f445..94fb686 100644
--- a/node_modules/react-native-share/lib/module/index.js
+++ b/node_modules/react-native-share/lib/module/index.js
@@ -1,10 +1,10 @@
-import { NativeModules, Platform } from 'react-native';
-import Overlay from './components/Overlay';
-import Sheet from './components/Sheet';
-import Button from './components/Button';
-import ShareSheet from './components/ShareSheet';
-import requireAndAskPermissions from './helpers/requireAndAskPermissions';
-import { Social, ShareAsset } from './types';
+import { NativeModules, Platform } from "react-native";
+import Overlay from "./components/Overlay";
+import Sheet from "./components/Sheet";
+import Button from "./components/Button";
+import ShareSheet from "./components/ShareSheet";
+import requireAndAskPermissions from "./helpers/requireAndAskPermissions";
+import { Social, ShareAsset } from "./types";
 const RNShare = {
   Button,
   ShareSheet,
@@ -12,13 +12,16 @@ const RNShare = {
   Sheet,
   Social: {
     FACEBOOK: NativeModules.RNShare.FACEBOOK || Social.Facebook,
-    FACEBOOK_STORIES: NativeModules.RNShare.FACEBOOKSTORIES || Social.FacebookStories,
+    FACEBOOK_STORIES:
+      NativeModules.RNShare.FACEBOOKSTORIES || Social.FacebookStories,
     PAGESMANAGER: NativeModules.RNShare.PAGESMANAGER || Social.Pagesmanager,
     TWITTER: NativeModules.RNShare.TWITTER || Social.Twitter,
     WHATSAPP: NativeModules.RNShare.WHATSAPP || Social.Whatsapp,
-    WHATSAPPBUSINESS: NativeModules.RNShare.WHATSAPPBUSINESS || Social.Whatsappbusiness,
+    WHATSAPPBUSINESS:
+      NativeModules.RNShare.WHATSAPPBUSINESS || Social.Whatsappbusiness,
     INSTAGRAM: NativeModules.RNShare.INSTAGRAM || Social.Instagram,
-    INSTAGRAM_STORIES: NativeModules.RNShare.INSTAGRAMSTORIES || Social.InstagramStories,
+    INSTAGRAM_STORIES:
+      NativeModules.RNShare.INSTAGRAMSTORIES || Social.InstagramStories,
     GOOGLEPLUS: NativeModules.RNShare.GOOGLEPLUS || Social.Googleplus,
     EMAIL: NativeModules.RNShare.EMAIL || Social.Email,
     PINTEREST: NativeModules.RNShare.PINTEREST || Social.Pinterest,
@@ -26,88 +29,103 @@ const RNShare = {
     SMS: NativeModules.RNShare.SMS || Social.Sms,
     TELEGRAM: NativeModules.RNShare.TELEGRAM || Social.Telegram,
     MESSENGER: NativeModules.RNShare.MESSENGER || Social.Messenger,
-    SNAPCHAT: NativeModules.RNShare.SNAPCHAT || Social.Snapchat
+    SNAPCHAT: NativeModules.RNShare.SNAPCHAT || Social.Snapchat,
   },
 
   open(options) {
     return new Promise((resolve, reject) => {
-      requireAndAskPermissions(options).then(() => {
-        if (Platform.OS === 'ios' && options.url && !options.urls) {
-          // Backward compatibility with { Share } from react-native
-          const url = options.url;
-          delete options.url;
-          options.urls = [url];
+      requireAndAskPermissions(options)
+        .then(() => {
+          if (Platform.OS === "ios" && options.url && !options.urls) {
+            // Backward compatibility with { Share } from react-native
+            const url = options.url;
+            delete options.url;
+            options.urls = [url];
 
-          if (options.filename && !options.filenames) {
-            options.filenames = [options.filename];
-            delete options.filename;
+            if (options.filename && !options.filenames) {
+              options.filenames = [options.filename];
+              delete options.filename;
+            }
           }
-        }
 
-        NativeModules.RNShare.open(options, error => {
-          return reject({
-            error
-          });
-        }, (success, message) => {
-          if (success) {
-            return resolve({
-              success,
-              message
-            });
-          } else if (options.failOnCancel === false) {
-            return resolve({
-              dismissedAction: true,
-              success,
-              message
-            });
-          } else {
-            reject(new Error('User did not share'));
-          }
-        });
-      }).catch(e => reject(e));
+          NativeModules.RNShare.open(
+            options,
+            (error) => {
+              return reject({
+                error,
+              });
+            },
+            (success, message) => {
+              if (success) {
+                return resolve({
+                  success,
+                  message,
+                });
+              } else if (options.failOnCancel === false) {
+                return resolve({
+                  dismissedAction: true,
+                  success,
+                  message,
+                });
+              } else {
+                // reject(new Error('User did not share'));
+              }
+            }
+          );
+        })
+        .catch((e) => reject(e));
     });
   },
 
   shareSingle(options) {
-    if (Platform.OS === 'ios' || Platform.OS === 'android') {
+    if (Platform.OS === "ios" || Platform.OS === "android") {
       return new Promise((resolve, reject) => {
-        requireAndAskPermissions(options).then(() => {
-          NativeModules.RNShare.shareSingle(options, error => {
-            return reject({
-              error
-            });
-          }, (success, message) => {
-            return resolve({
-              success,
-              message
-            });
-          });
-        }).catch(e => reject(e));
+        requireAndAskPermissions(options)
+          .then(() => {
+            NativeModules.RNShare.shareSingle(
+              options,
+              (error) => {
+                return reject({
+                  error,
+                });
+              },
+              (success, message) => {
+                return resolve({
+                  success,
+                  message,
+                });
+              }
+            );
+          })
+          .catch((e) => reject(e));
       });
     } else {
-      throw new Error('Not implemented');
+      throw new Error("Not implemented");
     }
   },
 
   isPackageInstalled(packageName) {
-    if (Platform.OS === 'android') {
+    if (Platform.OS === "android") {
       return new Promise((resolve, reject) => {
-        NativeModules.RNShare.isPackageInstalled(packageName, error => {
-          return reject({
-            error
-          });
-        }, isInstalled => {
-          return resolve({
-            isInstalled,
-            message: 'Package is Installed'
-          });
-        });
+        NativeModules.RNShare.isPackageInstalled(
+          packageName,
+          (error) => {
+            return reject({
+              error,
+            });
+          },
+          (isInstalled) => {
+            return resolve({
+              isInstalled,
+              message: "Package is Installed",
+            });
+          }
+        );
       });
     } else {
-      throw new Error('Not implemented');
+      throw new Error("Not implemented");
     }
-  }
-
+  },
 };
 export { Overlay, Sheet, Button, ShareSheet, ShareAsset, Social };
 export default RNShare;
diff --git a/node_modules/react-native-share/lib/module/index.js.map b/node_modules/react-native-share/lib/module/index.js.map
index 08887a0..fbe969a 100644
--- a/node_modules/react-native-share/lib/module/index.js.map
+++ b/node_modules/react-native-share/lib/module/index.js.map
@@ -1 +1,79 @@
-{"version":3,"sources":["index.tsx"],"names":["NativeModules","Platform","Overlay","Sheet","Button","ShareSheet","requireAndAskPermissions","Social","ShareAsset","RNShare","FACEBOOK","Facebook","FACEBOOK_STORIES","FACEBOOKSTORIES","FacebookStories","PAGESMANAGER","Pagesmanager","TWITTER","Twitter","WHATSAPP","Whatsapp","WHATSAPPBUSINESS","Whatsappbusiness","INSTAGRAM","Instagram","INSTAGRAM_STORIES","INSTAGRAMSTORIES","InstagramStories","GOOGLEPLUS","Googleplus","EMAIL","Email","PINTEREST","Pinterest","LINKEDIN","Linkedin","SMS","Sms","TELEGRAM","Telegram","MESSENGER","Messenger","SNAPCHAT","Snapchat","open","options","Promise","resolve","reject","then","OS","url","urls","filename","filenames","error","success","message","failOnCancel","dismissedAction","Error","catch","e","shareSingle","isPackageInstalled","packageName","isInstalled"],"mappings":"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","sourcesContent":["import { NativeModules, Platform } from 'react-native';\n\nimport Overlay from './components/Overlay';\nimport Sheet from './components/Sheet';\nimport Button from './components/Button';\nimport ShareSheet from './components/ShareSheet';\nimport requireAndAskPermissions from './helpers/requireAndAskPermissions';\nimport {\n  Social,\n  IsPackageInstalledResult,\n  ActivityType,\n  ShareOpenResult,\n  ShareAsset,\n  ShareOptions,\n  ShareSingleOptions,\n  ShareSingleResult,\n} from './types';\n\nconst RNShare = {\n  Button,\n  ShareSheet,\n  Overlay,\n  Sheet,\n\n  Social: {\n    FACEBOOK: NativeModules.RNShare.FACEBOOK || Social.Facebook,\n    FACEBOOK_STORIES: NativeModules.RNShare.FACEBOOKSTORIES || Social.FacebookStories,\n    PAGESMANAGER: NativeModules.RNShare.PAGESMANAGER || Social.Pagesmanager,\n    TWITTER: NativeModules.RNShare.TWITTER || Social.Twitter,\n    WHATSAPP: NativeModules.RNShare.WHATSAPP || Social.Whatsapp,\n    WHATSAPPBUSINESS: NativeModules.RNShare.WHATSAPPBUSINESS || Social.Whatsappbusiness,\n    INSTAGRAM: NativeModules.RNShare.INSTAGRAM || Social.Instagram,\n    INSTAGRAM_STORIES: NativeModules.RNShare.INSTAGRAMSTORIES || Social.InstagramStories,\n    GOOGLEPLUS: NativeModules.RNShare.GOOGLEPLUS || Social.Googleplus,\n    EMAIL: NativeModules.RNShare.EMAIL || Social.Email,\n    PINTEREST: NativeModules.RNShare.PINTEREST || Social.Pinterest,\n    LINKEDIN: NativeModules.RNShare.LINKEDIN || Social.Linkedin,\n    SMS: NativeModules.RNShare.SMS || Social.Sms,\n    TELEGRAM: NativeModules.RNShare.TELEGRAM || Social.Telegram,\n    MESSENGER: NativeModules.RNShare.MESSENGER || Social.Messenger,\n    SNAPCHAT: NativeModules.RNShare.SNAPCHAT || Social.Snapchat,\n  },\n\n  open(options: ShareOptions): Promise<ShareOpenResult | never> {\n    return new Promise((resolve, reject) => {\n      requireAndAskPermissions(options)\n        .then(() => {\n          if (Platform.OS === 'ios' && options.url && !options.urls) {\n            // Backward compatibility with { Share } from react-native\n            const url = options.url;\n            delete options.url;\n\n            options.urls = [url];\n\n            if (options.filename && !options.filenames) {\n              options.filenames = [options.filename];\n              delete options.filename;\n            }\n          }\n\n          NativeModules.RNShare.open(\n            options,\n            (error) => {\n              return reject({ error });\n            },\n            (success, message) => {\n              if (success) {\n                return resolve({\n                  success,\n                  message,\n                });\n              } else if (options.failOnCancel === false) {\n                return resolve({\n                  dismissedAction: true,\n                  success,\n                  message,\n                });\n              } else {\n                reject(new Error('User did not share'));\n              }\n            },\n          );\n        })\n        .catch((e: unknown) => reject(e));\n    });\n  },\n\n  shareSingle(options: ShareSingleOptions): Promise<ShareSingleResult | never> {\n    if (Platform.OS === 'ios' || Platform.OS === 'android') {\n      return new Promise((resolve, reject) => {\n        requireAndAskPermissions(options)\n          .then(() => {\n            NativeModules.RNShare.shareSingle(\n              options,\n              (error) => {\n                return reject({ error });\n              },\n              (success, message) => {\n                return resolve({\n                  success,\n                  message,\n                });\n              },\n            );\n          })\n          .catch((e: unknown) => reject(e));\n      });\n    } else {\n      throw new Error('Not implemented');\n    }\n  },\n\n  isPackageInstalled(packageName: string): Promise<IsPackageInstalledResult | never> {\n    if (Platform.OS === 'android') {\n      return new Promise((resolve, reject) => {\n        NativeModules.RNShare.isPackageInstalled(\n          packageName,\n          (error) => {\n            return reject({ error });\n          },\n          (isInstalled) => {\n            return resolve({\n              isInstalled,\n              message: 'Package is Installed',\n            });\n          },\n        );\n      });\n    } else {\n      throw new Error('Not implemented');\n    }\n  },\n} as const;\n\nexport { Overlay, Sheet, Button, ShareSheet, ShareAsset, Social };\nexport type { ShareSingleOptions, ShareOptions, ActivityType, IsPackageInstalledResult };\nexport type { OverlayProps } from './components/Overlay';\nexport type { SheetProps } from './components/Sheet';\nexport type { ButtonProps } from './components/Button';\nexport type { ShareSheetProps } from './components/ShareSheet';\nexport default RNShare;\n"]}
\ No newline at end of file
+{
+  "version": 3,
+  "sources": [
+    "index.tsx"
+  ],
+  "names": [
+    "NativeModules",
+    "Platform",
+    "Overlay",
+    "Sheet",
+    "Button",
+    "ShareSheet",
+    "requireAndAskPermissions",
+    "Social",
+    "ShareAsset",
+    "RNShare",
+    "FACEBOOK",
+    "Facebook",
+    "FACEBOOK_STORIES",
+    "FACEBOOKSTORIES",
+    "FacebookStories",
+    "PAGESMANAGER",
+    "Pagesmanager",
+    "TWITTER",
+    "Twitter",
+    "WHATSAPP",
+    "Whatsapp",
+    "WHATSAPPBUSINESS",
+    "Whatsappbusiness",
+    "INSTAGRAM",
+    "Instagram",
+    "INSTAGRAM_STORIES",
+    "INSTAGRAMSTORIES",
+    "InstagramStories",
+    "GOOGLEPLUS",
+    "Googleplus",
+    "EMAIL",
+    "Email",
+    "PINTEREST",
+    "Pinterest",
+    "LINKEDIN",
+    "Linkedin",
+    "SMS",
+    "Sms",
+    "TELEGRAM",
+    "Telegram",
+    "MESSENGER",
+    "Messenger",
+    "SNAPCHAT",
+    "Snapchat",
+    "open",
+    "options",
+    "Promise",
+    "resolve",
+    "reject",
+    "then",
+    "OS",
+    "url",
+    "urls",
+    "filename",
+    "filenames",
+    "error",
+    "success",
+    "message",
+    "failOnCancel",
+    "dismissedAction",
+    "Error",
+    "catch",
+    "e",
+    "shareSingle",
+    "isPackageInstalled",
+    "packageName",
+    "isInstalled"
+  ],
+  "mappings": "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",
+  "sourcesContent": [
+    "import { NativeModules, Platform } from 'react-native';\n\nimport Overlay from './components/Overlay';\nimport Sheet from './components/Sheet';\nimport Button from './components/Button';\nimport ShareSheet from './components/ShareSheet';\nimport requireAndAskPermissions from './helpers/requireAndAskPermissions';\nimport {\n  Social,\n  IsPackageInstalledResult,\n  ActivityType,\n  ShareOpenResult,\n  ShareAsset,\n  ShareOptions,\n  ShareSingleOptions,\n  ShareSingleResult,\n} from './types';\n\nconst RNShare = {\n  Button,\n  ShareSheet,\n  Overlay,\n  Sheet,\n\n  Social: {\n    FACEBOOK: NativeModules.RNShare.FACEBOOK || Social.Facebook,\n    FACEBOOK_STORIES: NativeModules.RNShare.FACEBOOKSTORIES || Social.FacebookStories,\n    PAGESMANAGER: NativeModules.RNShare.PAGESMANAGER || Social.Pagesmanager,\n    TWITTER: NativeModules.RNShare.TWITTER || Social.Twitter,\n    WHATSAPP: NativeModules.RNShare.WHATSAPP || Social.Whatsapp,\n    WHATSAPPBUSINESS: NativeModules.RNShare.WHATSAPPBUSINESS || Social.Whatsappbusiness,\n    INSTAGRAM: NativeModules.RNShare.INSTAGRAM || Social.Instagram,\n    INSTAGRAM_STORIES: NativeModules.RNShare.INSTAGRAMSTORIES || Social.InstagramStories,\n    GOOGLEPLUS: NativeModules.RNShare.GOOGLEPLUS || Social.Googleplus,\n    EMAIL: NativeModules.RNShare.EMAIL || Social.Email,\n    PINTEREST: NativeModules.RNShare.PINTEREST || Social.Pinterest,\n    LINKEDIN: NativeModules.RNShare.LINKEDIN || Social.Linkedin,\n    SMS: NativeModules.RNShare.SMS || Social.Sms,\n    TELEGRAM: NativeModules.RNShare.TELEGRAM || Social.Telegram,\n    MESSENGER: NativeModules.RNShare.MESSENGER || Social.Messenger,\n    SNAPCHAT: NativeModules.RNShare.SNAPCHAT || Social.Snapchat,\n  },\n\n  open(options: ShareOptions): Promise<ShareOpenResult | never> {\n    return new Promise((resolve, reject) => {\n      requireAndAskPermissions(options)\n        .then(() => {\n          if (Platform.OS === 'ios' && options.url && !options.urls) {\n            // Backward compatibility with { Share } from react-native\n            const url = options.url;\n            delete options.url;\n\n            options.urls = [url];\n\n            if (options.filename && !options.filenames) {\n              options.filenames = [options.filename];\n              delete options.filename;\n            }\n          }\n\n          NativeModules.RNShare.open(\n            options,\n            (error) => {\n              return reject({ error });\n            },\n            (success, message) => {\n              if (success) {\n                return resolve({\n                  success,\n                  message,\n                });\n              } else if (options.failOnCancel === false) {\n                return resolve({\n                  dismissedAction: true,\n                  success,\n                  message,\n                });\n              } else {\n               \n              }\n            },\n          );\n        })\n        .catch((e: unknown) => reject(e));\n    });\n  },\n\n  shareSingle(options: ShareSingleOptions): Promise<ShareSingleResult | never> {\n    if (Platform.OS === 'ios' || Platform.OS === 'android') {\n      return new Promise((resolve, reject) => {\n        requireAndAskPermissions(options)\n          .then(() => {\n            NativeModules.RNShare.shareSingle(\n              options,\n              (error) => {\n                return reject({ error });\n              },\n              (success, message) => {\n                return resolve({\n                  success,\n                  message,\n                });\n              },\n            );\n          })\n          .catch((e: unknown) => reject(e));\n      });\n    } else {\n      throw new Error('Not implemented');\n    }\n  },\n\n  isPackageInstalled(packageName: string): Promise<IsPackageInstalledResult | never> {\n    if (Platform.OS === 'android') {\n      return new Promise((resolve, reject) => {\n        NativeModules.RNShare.isPackageInstalled(\n          packageName,\n          (error) => {\n            return reject({ error });\n          },\n          (isInstalled) => {\n            return resolve({\n              isInstalled,\n              message: 'Package is Installed',\n            });\n          },\n        );\n      });\n    } else {\n      throw new Error('Not implemented');\n    }\n  },\n} as const;\n\nexport { Overlay, Sheet, Button, ShareSheet, ShareAsset, Social };\nexport type { ShareSingleOptions, ShareOptions, ActivityType, IsPackageInstalledResult };\nexport type { OverlayProps } from './components/Overlay';\nexport type { SheetProps } from './components/Sheet';\nexport type { ButtonProps } from './components/Button';\nexport type { ShareSheetProps } from './components/ShareSheet';\nexport default RNShare;\n"
+  ]
+}
diff --git a/node_modules/react-native-share/src/index.tsx b/node_modules/react-native-share/src/index.tsx
index 0849219..babf1e3 100644
--- a/node_modules/react-native-share/src/index.tsx
+++ b/node_modules/react-native-share/src/index.tsx
@@ -1,10 +1,10 @@
-import { NativeModules, Platform } from 'react-native';
+import { NativeModules, Platform } from "react-native";
 
-import Overlay from './components/Overlay';
-import Sheet from './components/Sheet';
-import Button from './components/Button';
-import ShareSheet from './components/ShareSheet';
-import requireAndAskPermissions from './helpers/requireAndAskPermissions';
+import Overlay from "./components/Overlay";
+import Sheet from "./components/Sheet";
+import Button from "./components/Button";
+import ShareSheet from "./components/ShareSheet";
+import requireAndAskPermissions from "./helpers/requireAndAskPermissions";
 import {
   Social,
   IsPackageInstalledResult,
@@ -14,7 +14,7 @@ import {
   ShareOptions,
   ShareSingleOptions,
   ShareSingleResult,
-} from './types';
+} from "./types";
 
 const RNShare = {
   Button,
@@ -24,13 +24,16 @@ const RNShare = {
 
   Social: {
     FACEBOOK: NativeModules.RNShare.FACEBOOK || Social.Facebook,
-    FACEBOOK_STORIES: NativeModules.RNShare.FACEBOOKSTORIES || Social.FacebookStories,
+    FACEBOOK_STORIES:
+      NativeModules.RNShare.FACEBOOKSTORIES || Social.FacebookStories,
     PAGESMANAGER: NativeModules.RNShare.PAGESMANAGER || Social.Pagesmanager,
     TWITTER: NativeModules.RNShare.TWITTER || Social.Twitter,
     WHATSAPP: NativeModules.RNShare.WHATSAPP || Social.Whatsapp,
-    WHATSAPPBUSINESS: NativeModules.RNShare.WHATSAPPBUSINESS || Social.Whatsappbusiness,
+    WHATSAPPBUSINESS:
+      NativeModules.RNShare.WHATSAPPBUSINESS || Social.Whatsappbusiness,
     INSTAGRAM: NativeModules.RNShare.INSTAGRAM || Social.Instagram,
-    INSTAGRAM_STORIES: NativeModules.RNShare.INSTAGRAMSTORIES || Social.InstagramStories,
+    INSTAGRAM_STORIES:
+      NativeModules.RNShare.INSTAGRAMSTORIES || Social.InstagramStories,
     GOOGLEPLUS: NativeModules.RNShare.GOOGLEPLUS || Social.Googleplus,
     EMAIL: NativeModules.RNShare.EMAIL || Social.Email,
     PINTEREST: NativeModules.RNShare.PINTEREST || Social.Pinterest,
@@ -45,7 +48,7 @@ const RNShare = {
     return new Promise((resolve, reject) => {
       requireAndAskPermissions(options)
         .then(() => {
-          if (Platform.OS === 'ios' && options.url && !options.urls) {
+          if (Platform.OS === "ios" && options.url && !options.urls) {
             // Backward compatibility with { Share } from react-native
             const url = options.url;
             delete options.url;
@@ -76,9 +79,9 @@ const RNShare = {
                   message,
                 });
               } else {
-                reject(new Error('User did not share'));
+                // reject(new Error('User did not share'));
               }
-            },
+            }
           );
         })
         .catch((e: unknown) => reject(e));
@@ -86,7 +89,7 @@ const RNShare = {
   },
 
   shareSingle(options: ShareSingleOptions): Promise<ShareSingleResult | never> {
-    if (Platform.OS === 'ios' || Platform.OS === 'android') {
+    if (Platform.OS === "ios" || Platform.OS === "android") {
       return new Promise((resolve, reject) => {
         requireAndAskPermissions(options)
           .then(() => {
@@ -100,18 +103,20 @@ const RNShare = {
                   success,
                   message,
                 });
-              },
+              }
             );
           })
           .catch((e: unknown) => reject(e));
       });
     } else {
-      throw new Error('Not implemented');
+      throw new Error("Not implemented");
     }
   },
 
-  isPackageInstalled(packageName: string): Promise<IsPackageInstalledResult | never> {
-    if (Platform.OS === 'android') {
+  isPackageInstalled(
+    packageName: string
+  ): Promise<IsPackageInstalledResult | never> {
+    if (Platform.OS === "android") {
       return new Promise((resolve, reject) => {
         NativeModules.RNShare.isPackageInstalled(
           packageName,
@@ -121,21 +126,26 @@ const RNShare = {
           (isInstalled) => {
             return resolve({
               isInstalled,
-              message: 'Package is Installed',
+              message: "Package is Installed",
             });
-          },
+          }
         );
       });
     } else {
-      throw new Error('Not implemented');
+      throw new Error("Not implemented");
     }
   },
 } as const;
 
 export { Overlay, Sheet, Button, ShareSheet, ShareAsset, Social };
-export type { ShareSingleOptions, ShareOptions, ActivityType, IsPackageInstalledResult };
-export type { OverlayProps } from './components/Overlay';
-export type { SheetProps } from './components/Sheet';
-export type { ButtonProps } from './components/Button';
-export type { ShareSheetProps } from './components/ShareSheet';
+export type {
+  ShareSingleOptions,
+  ShareOptions,
+  ActivityType,
+  IsPackageInstalledResult,
+};
+export type { OverlayProps } from "./components/Overlay";
+export type { SheetProps } from "./components/Sheet";
+export type { ButtonProps } from "./components/Button";
+export type { ShareSheetProps } from "./components/ShareSheet";
 export default RNShare;
